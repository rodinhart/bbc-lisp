.print
    JSR getType
    LDA print_jumphigh, Y
    PHA
    LDA print_jumplow, Y
    PHA
    RTS
.print_jumplow
    EQUB LO(printNil - 1)
    EQUB LO(printCons - 1)
    EQUB LO(printProc - 1)
    EQUB LO(printMacro - 1)
    EQUB LO(printNative - 1)
    EQUB LO(printSymbol - 1)
    EQUB LO(printNumber - 1)
.print_jumphigh
    EQUB HI(printNil - 1)
    EQUB HI(printCons - 1)
    EQUB HI(printProc - 1)
    EQUB HI(printMacro - 1)
    EQUB HI(printNative - 1)
    EQUB HI(printSymbol - 1)
    EQUB HI(printNumber - 1)

.printNil
    LDA #'n'
    JSR osasci
    LDA #'i'
    JSR osasci
    LDA #'l'
    JSR osasci
    RTS

.printCons
    LDA #'('
    JSR osasci
    LDA #0
    PHA
.printCons_loop
    PLA
    JSR osasci
    LDA #' '
    PHA

    PUSH exp

    HEAD exp, exp
    JSR print

    PULL tmp
    TAIL exp, tmp

    ; nil?
    LDA #0
    CMP exp
    BNE printCons_loop
    CMP exp + 1
    BNE printCons_loop

    PLA
    LDA #')'
    JSR osasci
    RTS

.printProc
    LDA #'['
    JSR osasci
    LDA #'P'
    JSR osasci
    LDA #'R'
    JSR osasci
    LDA #'O'
    JSR osasci
    LDA #'C'
    JSR osasci
    LDA #']'
    JSR osasci
    RTS

.printMacro
    LDA #'['
    JSR osasci
    LDA #'M'
    JSR osasci
    LDA #'A'
    JSR osasci
    LDA #'C'
    JSR osasci
    LDA #'R'
    JSR osasci
    LDA #'O'
    JSR osasci
    LDA #']'
    JSR osasci
    RTS

.printNative
    LDA #'['
    JSR osasci
    LDA #'N'
    JSR osasci
    LDA #'A'
    JSR osasci
    LDA #'T'
    JSR osasci
    LDA #']'
    JSR osasci
    RTS

.printSymbol
    LDY #1
    LDA (exp), Y
    JSR osasci
    INY
    LDA (exp), Y
    JSR osasci
    INY
    LDA (exp), Y
    JSR osasci
    RTS

.printNumber
    LDY #1
    LDA (exp), Y
    JSR printDecimal
    RTS
